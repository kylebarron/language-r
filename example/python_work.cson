'patterns': [
  {
    'include': '#line_comments'
  }
  {
    'comment': 'keywords that delimit an exception'
    'name': 'keyword.control.exception.python'
    'match': '\\b(except|finally|try|raise)\\b'
  }
  {
    'comment': 'keywords that alter flow from within a block'
    'name': 'keyword.control.statement.python'
    'match': '\\b(with|break|continue|pass|return|yield|await)\\b'
  }
  {
    'captures':
      '1':
        'name': 'keyword.other.python'
    'comment': 'keywords that haven\'t fit into other groups (yet).'
    'match': '\\b(as|assert|del|exec|print)\\b'
  }
  {
    'begin': '^\\s*(def)\\s+(?=[A-Za-z_][A-Za-z0-9_]*\\s*\\()'
    'beginCaptures':
      '1':
        'name': 'storage.type.function.python'
    'end': '(\\))\\s*(?:(\\:)|(.*$\\n?))'
    'endCaptures':
      '1':
        'name': 'punctuation.definition.parameters.end.python'
      '2':
        'name': 'punctuation.section.function.begin.python'
      '3':
        'name': 'invalid.illegal.missing-section-begin.python'
    'name': 'meta.function.python'
    'patterns': [
      {
        'begin': '(?=[A-Za-z_][A-Za-z0-9_]*)'
        'contentName': 'entity.name.function.python'
        'end': '(?![A-Za-z0-9_])'
        'patterns': [
          {
            'include': '#entity_name_function'
          }
        ]
      }
      {
        'begin': '(\\()'
        'beginCaptures':
          '1':
            'name': 'punctuation.definition.parameters.begin.python'
        'contentName': 'meta.function.parameters.python'
        'end': '(?=\\)\\s*\\:)'
        'patterns': [
          {
            'include': '#line_comments'
          }
          {
            'include': '#keyword_arguments'
          }
          {
            'captures':
              '1':
                'name': 'variable.parameter.function.python'
              '2':
                'name': 'punctuation.separator.parameters.python'
            'match': '\\b([a-zA-Z_][a-zA-Z_0-9]*)\\s*(?:(,)|(?=[\\n\\)]))'
          }
        ]
      }
    ]
  }
  {
    'begin': '^\\s*(def)\\s+(?=[A-Za-z_][A-Za-z0-9_]*)'
    'beginCaptures':
      '1':
        'name': 'storage.type.function.python'
    'end': '(\\()|\\s*($\\n?|#.*$\\n?)'
    'endCaptures':
      '1':
        'name': 'punctuation.definition.parameters.begin.python'
      '2':
        'name': 'invalid.illegal.missing-parameters.python'
    'name': 'meta.function.python'
    'patterns': [
      {
        'begin': '(?=[A-Za-z_][A-Za-z0-9_]*)'
        'contentName': 'entity.name.function.python'
        'end': '(?![A-Za-z0-9_])'
        'patterns': [
          {
            'include': '#entity_name_function'
          }
        ]
      }
    ]
  }
  {
    'begin': '^\\s*(?=@\\s*[A-Za-z_][A-Za-z0-9_]*(?:\\.[a-zA-Z_][a-zA-Z_0-9]*)*\\s*\\()'
    'comment': 'a decorator may be a function call which returns a decorator.'
    'end': '(\\))'
    'endCaptures':
      '1':
        'name': 'punctuation.definition.arguments.end.python'
    'name': 'meta.function.decorator.python'
    'patterns': [
      {
        'begin': '(?=(@)\\s*[A-Za-z_][A-Za-z0-9_]*(?:\\.[A-Za-z_][A-Za-z0-9_]*)*\\s*\\()'
        'beginCaptures':
          '1':
            'name': 'punctuation.definition.decorator.python'
        'contentName': 'entity.name.function.decorator.python'
        'end': '(?=\\s*\\()'
        'patterns': [
          {
            'include': '#dotted_name'
          }
        ]
      }
      {
        'begin': '(\\()'
        'beginCaptures':
          '1':
            'name': 'punctuation.definition.arguments.begin.python'
        'contentName': 'meta.function.decorator.arguments.python'
        'end': '(?=\\))'
        'patterns': [
          {
            'include': '#keyword_arguments'
          }
          {
            'include': '$self'
          }
        ]
      }
    ]
  }
  {
    'begin': '^\\s*(?=@\\s*[A-Za-z_][A-Za-z0-9_]*(?:\\.[a-zA-Z_][a-zA-Z_0-9]*)*)'
    'contentName': 'entity.name.function.decorator.python'
    'end': '(?=\\s|$\\n?|#)'
    'name': 'meta.function.decorator.python'
    'patterns': [
      {
        'begin': '(?=(@)\\s*[A-Za-z_][A-Za-z0-9_]*(\\.[A-Za-z_][A-Za-z0-9_]*)*)'
        'beginCaptures':
          '1':
            'name': 'punctuation.definition.decorator.python'
        'end': '(?=\\s|$\\n?|#)'
        'patterns': [
          {
            'include': '#dotted_name'
          }
        ]
      }
    ]
  }
  {
    'begin': '(?<=\\)|\\])\\s*(\\()'
    'beginCaptures':
      '1':
        'name': 'punctuation.definition.arguments.begin.python'
    'contentName': 'meta.function-call.arguments.python'
    'end': '(\\))'
    'endCaptures':
      '1':
        'name': 'punctuation.definition.arguments.end.python'
    'name': 'meta.function-call.python'
    'patterns': [
      {
        'include': '#keyword_arguments'
      }
      {
        'include': '$self'
      }
    ]
  }
  {
    'begin': '(?=[A-Za-z_][A-Za-z0-9_]*(?:\\.[a-zA-Z_][a-zA-Z_0-9]*)*\\s*\\()'
    'end': '(\\))'
    'endCaptures':
      '1':
        'name': 'punctuation.definition.arguments.end.python'
    'name': 'meta.function-call.python'
    'patterns': [
      {
        'begin': '(?=[A-Za-z_][A-Za-z0-9_]*(?:\\.[A-Za-z_][A-Za-z0-9_]*)*\\s*\\()'
        'end': '(?=\\s*\\()'
        'patterns': [
          {
            'include': '#dotted_name'
          }
        ]
      }
      {
        'begin': '(\\()'
        'beginCaptures':
          '1':
            'name': 'punctuation.definition.arguments.begin.python'
        'contentName': 'meta.function-call.arguments.python'
        'end': '(?=\\))'
        'patterns': [
          {
            'include': '#keyword_arguments'
          }
          {
            'include': '$self'
          }
        ]
      }
    ]
  }
  {
    'begin': '(?=[A-Za-z_][A-Za-z0-9_]*(?:\\.[a-zA-Z_][a-zA-Z_0-9]*)*\\s*\\[)'
    'end': '(\\])'
    'endCaptures':
      '1':
        'name': 'punctuation.definition.arguments.end.python'
    'name': 'meta.item-access.python'
    'patterns': [
      {
        'begin': '(?=[A-Za-z_][A-Za-z0-9_]*(?:\\.[A-Za-z_][A-Za-z0-9_]*)*\\s*\\[)'
        'end': '(?=\\s*\\[)'
        'patterns': [
          {
            'include': '#dotted_name'
          }
        ]
      }
      {
        'begin': '(\\[)'
        'beginCaptures':
          '1':
            'name': 'punctuation.definition.arguments.begin.python'
        'contentName': 'meta.item-access.arguments.python'
        'end': '(?=\\])'
        'patterns': [
          {
            'include': '$self'
          }
        ]
      }
    ]
  }
  {
    'begin': '(?<=\\)|\\])\\s+(\\[)'
    'beginCaptures':
      '1':
        'name': 'punctuation.definition.arguments.begin.python'
    'contentName': 'meta.item-access.arguments.python'
    'end': '(\\])'
    'endCaptures':
      '1':
        'name': 'punctuation.definition.arguments.end.python'
    'name': 'meta.item-access.python'
    'patterns': [
      {
        'include': '$self'
      }
    ]
  }
  {
    'captures':
      '1':
        'name': 'storage.type.function.python'
    'match': '\\b(def|lambda)\\b'
  }
  {
    'include': '#line_continuation'
  }
  {
    'match': '\\b(None|True|False|Ellipsis|NotImplemented)\\b'
    'name': 'constant.language.python'
  }
  {
    'include': '#string_quoted_single'
  }
  {
    'include': '#string_quoted_double'
  }
  {
    'include': '#dotted_name'
  }
  {
    'begin': '(\\()'
    'end': '(\\))'
    'patterns': [
      {
        'include': '$self'
      }
    ]
  }
  {
    'captures':
      '1':
        'name': 'punctuation.definition.list.begin.python'
      '2':
        'name': 'meta.empty-list.python'
      '3':
        'name': 'punctuation.definition.list.end.python'
    'match': '(\\[)(\\s*(\\]))\\b'
  }
  ## ADAPT THIS FOR c() for making lists/vectors in R
  {
    'begin': '(\\[)'
    'beginCaptures':
      '1':
        'name': 'punctuation.definition.list.begin.python'
    'end': '(\\])'
    'endCaptures':
      '1':
        'name': 'punctuation.definition.list.end.python'
    'name': 'meta.structure.list.python'
    'patterns': [
      {
        'begin': '(?<=\\[|\\,)\\s*(?![\\],])'
        'contentName': 'meta.structure.list.item.python'
        'end': '\\s*(?:(,)|(?=\\]))'
        'endCaptures':
          '1':
            'name': 'punctuation.separator.list.python'
        'patterns': [
          {
            'include': '$self'
          }
        ]
      }
    ]
  }
  {
    'captures':
      '1':
        'name': 'punctuation.definition.tuple.begin.python'
      '2':
        'name': 'meta.empty-tuple.python'
      '3':
        'name': 'punctuation.definition.tuple.end.python'
    'match': '(\\()(\\s*(\\)))'
    'name': 'meta.structure.tuple.python'
  }
  {
    'captures':
      '1':
        'name': 'punctuation.definition.dictionary.begin.python'
      '2':
        'name': 'meta.empty-dictionary.python'
      '3':
        'name': 'punctuation.definition.dictionary.end.python'
    'match': '(\\{)(\\s*(\\}))'
    'name': 'meta.structure.dictionary.python'
  }
]
'repository':
  'builtin_functions':
    'match': '(?x)\\b(__import__|abs|all|any|ascii|bin|bool|bytearray|bytes|callable|chr|classmethod|compile|complex|delattr|dict|dir|divmod|enumerate|eval|exec|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|isinstance|issubclass|iter|len|list|locals|map|max|memoryview|min|next|object|oct|open|ord|pow|print|property|range|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|vars|zip|file|long|raw_input|reduce|reload|unichr|unicode|xrange|apply|buffer|coerce|intern|execfile)\\b'
    'name': 'support.function.builtin.python'
  'builtin_types':
    'match': '(?x)\\b(\n\t\t\t\tbasestring|bool|buffer|bytearray|bytes|complex|dict|float|frozenset|int|\n\t\t\t\tlist|long|memoryview|object|range|set|slice|str|tuple|unicode|xrange\n\t\t\t)\\b'
    'name': 'support.type.python'
  'constant_placeholder':
    'match': '(?i:(%(\\([a-z_]+\\))?#?0?\\-?[ ]?\\+?([0-9]*|\\*)(\\.([0-9]*|\\*))?([hL][a-z]|[a-z%]))|(\\{([!\\[\\].:\\w ]+)?\\}))'
    'name': 'constant.other.placeholder.python'
  'dotted_name':
    'begin': '(?=[A-Za-z_][A-Za-z0-9_]*(?:\\.[A-Za-z_][A-Za-z0-9_]*)*)'
    'end': '(?![A-Za-z0-9_\\.])'
    'patterns': [
      {
        'begin': '(\\.)(?=[A-Za-z_][A-Za-z0-9_]*)'
        'end': '(?![A-Za-z0-9_])'
        'patterns': [
          {
            'include': '#illegal_names'
          }
          {
            'include': '#generic_names'
          }
        ]
      }
      {
        'begin': '(?<!\\.)(?=[A-Za-z_][A-Za-z0-9_]*)'
        'end': '(?![A-Za-z0-9_])'
        'patterns': [
          {
            'include': '#builtin_functions'
          }
          {
            'include': '#builtin_types'
          }
          {
            'include': '#builtin_exceptions'
          }
          {
            'include': '#illegal_names'
          }
          {
            'include': '#generic_names'
          }
        ]
      }
    ]
  'entity_name_function':
    'patterns': [
      {
        'include': '#illegal_names'
      }
      {
        'include': '#generic_names'
      }
    ]
  'escaped_char':
    'captures':
      '1':
        'name': 'constant.character.escape.hex.python'
      '2':
        'name': 'constant.character.escape.octal.python'
      '3':
        'name': 'constant.character.escape.newline.python'
      '4':
        'name': 'constant.character.escape.backlash.python'
      '5':
        'name': 'constant.character.escape.double-quote.python'
      '6':
        'name': 'constant.character.escape.single-quote.python'
      '7':
        'name': 'constant.character.escape.bell.python'
      '8':
        'name': 'constant.character.escape.backspace.python'
      '9':
        'name': 'constant.character.escape.formfeed.python'
      '10':
        'name': 'constant.character.escape.linefeed.python'
      '11':
        'name': 'constant.character.escape.return.python'
      '12':
        'name': 'constant.character.escape.tab.python'
      '13':
        'name': 'constant.character.escape.vertical-tab.python'
    'match': '(\\\\x[0-9A-F]{2})|(\\\\[0-7]{3})|(\\\\\\n)|(\\\\\\\\)|(\\\\\\")|(\\\\\')|(\\\\a)|(\\\\b)|(\\\\f)|(\\\\n)|(\\\\r)|(\\\\t)|(\\\\v)'
  'function_name':
    'patterns': [
      {
        'include': '#builtin_exceptions'
      }
      {
        'include': '#builtin_functions'
      }
      {
        'include': '#builtin_types'
      }
      {
        'include': '#generic_names'
      }
    ]
  'generic_names':
    'match': '[A-Za-z_][A-Za-z0-9_]*'
  'illegal_names':
    'match': '\\b(and|as|assert|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|nonlocal|not|or|pass|print|raise|return|try|while|with|yield|await)\\b'
    'name': 'invalid.illegal.name.python'
  'keyword_arguments':
    'begin': '\\b([a-zA-Z_][a-zA-Z_0-9]*)\\s*(=)(?!=)'
    'beginCaptures':
      '1':
        'name': 'variable.parameter.function.python'
      '2':
        'name': 'keyword.operator.assignment.python'
    'end': '\\s*(?:(,)|(?=$\\n?|[\\)\\:]))'
    'endCaptures':
      '1':
        'name': 'punctuation.separator.parameters.python'
    'patterns': [
      {
        'include': '$self'
      }
    ]
